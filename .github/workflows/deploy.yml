name: Auto-Deploy to Mittwald

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install and build locally
      run: |
        echo "=== Installing dependencies ==="
        npm ci
        
        echo "=== Building project if needed ==="
        # Falls Sie einen Build-Schritt haben:
        # npm run build
    
    - name: Install sshpass
      run: sudo apt-get install -y sshpass
    
    - name: Deploy and setup everything
      env:
        SSHPASS: ${{ secrets.MITTWALD_PASSWORD }}
      run: |
        echo "=== Deploying files to server ==="
        # Alles hochladen (inklusive node_modules für sofortigen Start)
        sshpass -e rsync -avz --delete \
          -e "ssh -o StrictHostKeyChecking=no" \
          --exclude '.git' \
          --exclude '.github' \
          --exclude '.gitignore' \
          ./ ${{ secrets.MITTWALD_USER }}@${{ secrets.MITTWALD_HOST }}:${{ secrets.MITTWALD_PATH }}/
        
        echo "=== Setting up auto-start on server ==="
        # Server-Setup automatisieren
        sshpass -e ssh -o StrictHostKeyChecking=no \
          ${{ secrets.MITTWALD_USER }}@${{ secrets.MITTWALD_HOST }} << 'ENDSSH'
          cd ${{ secrets.MITTWALD_PATH }}
          
          # PM2 global installieren falls nicht vorhanden
          which pm2 || npm install -g pm2
          
          # Alte Prozesse beenden
          pm2 delete reveal-presentation 2>/dev/null || true
          
          # Server-Startskript erstellen
          cat > start-server.sh << 'EOF'
          #!/bin/bash
          cd $(dirname "$0")
          npx gulp serve --port 3000
          EOF
          
          chmod +x start-server.sh
          
          # Mit PM2 starten und speichern
          pm2 start ./start-server.sh --name reveal-presentation
          pm2 save
          pm2 startup || true
          
          # Status prüfen
          echo "=== Server Status ==="
          pm2 status
          echo "=== Deployment completed successfully! ==="
        ENDSSH
